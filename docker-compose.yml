version: '3.8'

services:
  # identityapi:
  #   build:
  #     context: /webblog.backend/src/webblog.backend.IdentityApi
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5001:80"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - DbNpgsql=${IDENTITY_DB_CONNECTION}
  #     - Kafka__BootstrapServers=${KAFKA_BOOTSTRAP_SERVERS}
  #   networks:
  #     - internal_network
  #   depends_on:
  #     - postgresql_identity
  #     - kafka

  blogapi:
    build:
      context: ./webblog.backend/src/webblog.backend.BlogApi
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DbNpgsql=${BLOG_DB_CONNECTION}
      - Kafka__BootstrapServers=${KAFKA_BOOTSTRAP_SERVERS}
    networks:
      - internal_network
    depends_on:
      - postgresql_blog
      - kafka

  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - internal_network
  
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - kafka
    networks:
      - internal_network

  postgresql_identity:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_identity_data:/var/lib/postgresql/data
    networks:
      - internal_network

  postgresql_blog:
    image: postgres:16
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_blog_data:/var/lib/postgresql/data
    networks:
      - internal_network

# на будущее
# nginx:
#   image: nginx:latest
#   ports:
#     - "80:80"
#   networks:
#     - internal_network

# frontend:
#   image: your-frontend-image
#   ports:
#     - "3000:3000"
#   networks:
#     - internal_network

volumes:
  kafka_data:
  postgres_identity_data:
  postgres_blog_data:

networks:
  internal_network:
    driver: bridge
